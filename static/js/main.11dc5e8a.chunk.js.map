{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","defaultProps","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","key","Date","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.11dc5e8a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" aria-current=\"page\" href =\"/\">Home</a>\r\n                        </li>\r\n                        { /*<li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n    </li> */}\r\n                    </ul>\r\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set title here',\r\n    aboutText: 'About'\r\n  };","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase!\", \"success\");\r\n    }\r\n\r\n    const handleLoClick = ()=>{ \r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase!\", \"success\");\r\n    }\r\n\r\n    const handleClearClick = ()=>{ \r\n        let newText = '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value) \r\n    }\r\n\r\n    // Credits: A\r\n    const handleCopy = () => {\r\n        navigator.clipboard.writeText(text); \r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n    }\r\n\r\n    // Credits: Coding Wala\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState(''); \r\n    // text = \"new text\"; // Wrong way to change the state\r\n    // setText(\"new text\"); // Correct way to change the state\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'#042743'}}> \r\n            <h1 className='mb-4'>{props.heading}</h1>\r\n            <div className=\"mb-3\"> \r\n            <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n            <p>{0.008 *  text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n            <h2>CREATED BY PRAPTI RANA</h2>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height: '50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\n//import About from './components/About';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n//import {\r\n//  BrowserRouter as Router,\r\n  //Switch,\r\n  //Route\r\n//} from \"react-router-dom\"\r\n\r\n \r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert = (message, type)=>{\r\n      setAlert({\r\n        msg: message,\r\n        type: type\r\n      })\r\n      setTimeout(() => {\r\n          setAlert(null);\r\n      }, 1500);\r\n  }\r\n\r\n  const toggleMode = ()=>{\r\n    if(mode === 'light'){\r\n      setMode('dark');\r\n      document.body.style.backgroundColor = '#042743';\r\n      showAlert(\"Dark mode has been enabled\", \"success\");\r\n    }\r\n    else{\r\n      setMode('light');\r\n      document.body.style.backgroundColor = 'white';\r\n      showAlert(\"Light mode has been enabled\", \"success\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n \r\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\r\n    <Alert alert={alert}/>\r\n    <div className=\"container my-3\">\r\n    { /*<Switch> * /}\r\n    {/* /users --> Component 1\r\n        /users/home --> Component 2 */}\r\n  \r\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\r\n          {/*</Route>8/ }\r\n  {/* </Switch> */}\r\n    </div>\r\n   {/* </Router> */}\r\n       </> \r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}